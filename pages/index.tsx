import { useState, useEffect } from "react";
import useSWR from "swr";
import Head from "next/head";
import Image from "next/image";
import styles from "/styles/Home.module.css";

import { fetcher } from "/lib/fetcher";

export default function Home() {
  const [task, setTask] = useState({ task: "" });

  const handleChange = ({ currentTarget: input }) => {
    input.value === ""
      ? setTask({ task: "" })
      : setTask((prev) => ({ ...prev, task: input.value }));
  };

  const { data: tasks } = useSWR(`/api/task`, fetcher);

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <h1 className={styles.title}>Sample TODO App</h1>
        <form
          //onSubmit={addTask}
          className={styles.form_container}
        >
          <input
            className={styles.input}
            type="text"
            placeholder="Task to be done..."
            onChange={handleChange}
            value={task.task}
          />
          <button type="submit" className={styles.submit_btn}>
            Add
          </button>
        </form>
        <div className={styles.grid}>
          {tasks &&
            tasks.map((task) => (
              <div className={styles.task_container} key={task.id}>
                <input
                  type="checkbox"
                  className={styles.check_box}
                  //checked={task.status}
                  // onChange={() => updateTask(task.id)}
                />
                <p
                  className={
                    task.completed
                      ? styles.task_text + " " + styles.line_through
                      : styles.task_text
                  }
                >
                  {task.task}
                </p>
                <button
                  // onClick={() => editTask(task.id)}
                  className={styles.edit_task}
                >
                  &#9998;
                </button>
                <button
                  // onClick={() => deleteTask(task._id)}
                  className={styles.remove_task}
                >
                  &#10006;
                </button>
              </div>
            ))}
          {tasks && tasks.length === 0 && <h2 className={styles.no_tasks}>No tasks</h2>}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}
